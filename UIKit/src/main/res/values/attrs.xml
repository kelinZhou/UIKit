<?xml version="1.0" encoding="utf-8"?>
<resources>

    <declare-styleable name="FormLayout">
        <!--分隔线位置的百分比，可输入0到1的小数，0表示0%，1表示100%-->
        <attr name="layoutGuidelinePercent" format="float" />
    </declare-styleable>

    <declare-styleable name="FormView">
        <!--分隔线位置的百分比，可输入0到1的小数，0表示0%，1表示100%-->
        <attr name="guidelinePercent" format="float" />
        <!--是否不显示底部的分隔线-->
        <attr name="noPartingLine" format="boolean" />
        <!--导航图标-->
        <attr name="navigationIcon" format="reference" />
        <!--是否可编辑,如果不设置将根据是否有navigationIcon判断。-->
        <attr name="editable" format="boolean" />
        <!--是否是必填字段-->
        <attr name="requiredField" format="boolean" />
        <!--表单字段名称-->
        <attr name="fieldName" format="string" />
        <!--表单字段的值-->
        <attr name="fieldValue" format="string" />
        <!--表单字段值的文字颜色-->
        <attr name="fieldValueColor" format="color" />
        <!--表单字段值的文字大小-->
        <attr name="fieldValueSize" format="dimension" />
        <!--表单字段名的文字颜色-->
        <attr name="fieldNameColor" format="color" />
        <!--表单字段名的文字大小-->
        <attr name="fieldNameSize" format="dimension" />
        <!--表单字段值的单位-->
        <attr name="fieldUnit" format="string" />
        <!--表单字段值的单位的文字颜色-->
        <attr name="fieldUnitColor" format="color" />
        <!--表单字段的内容提示-->
        <attr name="android:hint" />
        <!--输入类型，只有在没设置navigationIcon的情况下该设置才有效。-->
        <attr name="android:inputType" />
        <!--最大输入长度，只有在没设置navigationIcon的情况下该设置才有效。-->
        <attr name="android:maxLength" />
        <!--文字计数器是否可用-->
        <attr name="counterEnable" format="boolean" />
        <!--小数格式化，格式为：整数部分长度,小数部分长度；例如：12,3-->
        <attr name="decimalFormat" format="string" />
        <!--是否垂直居中-->
        <attr name="centerVertical" format="boolean" />
        <!--键盘类型，编辑模式下默认弹出的键盘类型，inputType的扩展功能-->
        <attr name="keyType" format="flags">
            <!--英文字母小写-->
            <flag name="small_letter" value="0x11" />
            <!--英文字母大写-->
            <flag name="capital_letter" value="0x21" />
            <!--英文字母加数字，默认弹出英文键盘-->
            <flag name="letter_number" value="0x31" />
            <!--英文字母小写加数字，默认弹出英文键盘-->
            <flag name="small_letter_number" value="0x41" />
            <!--英文字母大写加数字，默认弹出英文键盘-->
            <flag name="capital_letter_number" value="0x51" />
            <!--数字加英文字母，默认弹出数字键盘-->
            <flag name="number_letter" value="0x33" />
            <!--数字加英文字母小写，默认弹出数字键盘-->
            <flag name="number_small_letter" value="0x43" />
            <!--数字加英文字母大写，默认弹出数字键盘-->
            <flag name="number_capital_letter" value="0x53" />
        </attr>
        <!--聪明的hint是否可用，当可用时会根据fieldName的值自动设置hint。-->
        <attr name="smartHintEnable" format="boolean" />
        <!--聪明的背景色是否可用，当可用时会根据是否可编辑的状态自动设置背景色。-->
        <attr name="smartBackgroundEnable" format="boolean" />
        <!--设置ICON图标-->
        <attr name="android:drawableStart" />
        <!--设置Icon图标的间距-->
        <attr name="android:drawablePadding" />
        <!--设置值的gravity属性-->
        <attr name="valueGravity" format="enum">
            <!--靠左-->
            <enum name="start" value="0x01" />
            <!--居中-->
            <enum name="center" value="0x02" />
            <!--靠右-->
            <enum name="end" value="0x03" />
        </attr>
    </declare-styleable>

    <declare-styleable name="VerticalSwitcherTextView">
        <attr name="android:text" />
        <attr name="android:textColor" />
        <attr name="android:textSize" />
        <attr name="android:gravity" />
        <!--每次滚动的间隔时间-->
        <attr name="intervalDuration" format="integer" />
    </declare-styleable>

    <declare-styleable name="RichTextView">
        <!--设置查看更多的提示文本-->
        <attr name="seeMoreText" format="string" />
        <!--设置查看更多的提示文本的字体颜色-->
        <attr name="seeMoreTextColor" format="color|string" />
        <!--设置查看更多的提示文本的字体大小-->
        <attr name="seeMoreTextSize" format="dimension" />
        <!--设置查看更多文本的内边距-->
        <attr name="seeMoreTextPadding" format="dimension" />
        <!--设置查看更多的提示文本的字体样式-->
        <attr name="seeMoreTextStyle" format="flags">
            <!--加粗-->
            <flag name="bold" value="0x10" />
            <!--斜体-->
            <flag name="italic" value="0x11" />
            <!--加粗且斜体-->
            <flag name="bold_italic" value="0x12" />
            <!--加粗且带下划线-->
            <flag name="bold_underline" value="0x13" />
            <!--斜体且带下划线-->
            <flag name="italic_underline" value="0x14" />
            <!--斜体、加粗且带下划线-->
            <flag name="italic_underline_bold" value="0x15" />
        </attr>
        <!--是否是通过点击整个View触发查看更多-->
        <attr name="clickViewSeeMore" format="boolean" />
        <!--文本资源文件ID-->
        <attr name="textRawResId" format="reference" />
    </declare-styleable>

    <declare-styleable name="DraggableLayout">

        <!--当抽屉全部被打开后剩余的空间大小，该参数的值是一个字符串，但是他必须是一个有格式的字符串。
        格式为整数加单位，单位有：
            1. dp 表示显露出来的大小为Xdp，例如 20dp；
            2. % 表示显露出来的大小为自身的百分比，例如 20%；
            3. %p 表示显露出来的大小为父组件(也就是DragLayout)的百分比，例如 20%p；-->
        <attr name="minRemainingSpace" format="string" />

        <!--有中间状态时的剩余控件大小，该参数的值是一个字符串，但是他必须是一个有格式的字符串。
        格式为整数加单位，单位有：
            1. dp 表示显露出来的大小为Xdp，例如 20dp；
            2. % 表示显露出来的大小为自身的百分比，例如 20%；
            3. %p 表示显露出来的大小为父组件(也就是DragLayout)的百分比，例如 20%p；-->
        <attr name="middleRemainingSpace" format="string" />

        <!--把手大小，即当状态为closed时可被拖拽的子view的可见部分的大小，该参数的值是一个字符串，但是他必须是一个有格式的字符串。
        格式为整数加单位，单位有：
            1. dp 表示显露出来的大小为Xdp，例如 20dp；
            2. % 表示显露出来的大小为自身的百分比，例如 20%；
            3. %p 表示显露出来的大小为父组件(也就是DragLayout)的百分比，例如 20%p；-->
        <attr name="handleSize" format="string" />

        <!--初始化状态-->
        <attr name="initStatus">
            <flag name="middle" value="0x0001" />
            <flag name="open" value="0x0002" />
            <flag name="close" value="0x0003" />
        </attr>

        <!--是否拥有中间状态，即抽屉是否可以被拉开到一半的位置(当然这个中间的位置是可以指定的)。-->
        <attr name="hasMiddleStatus" format="boolean" />

        <!--通常情况下该参数不需要设置，但是如果你的抽屉里面不止一个可以响应手势控件的时候(例如有一个横向的listView和一个竖向的listView)
        就需要使用一个ViewGroup将这两个listView包裹起来，然后将这个ViewGroup的ID通过该参数设置，这样才能保证两个listView都能响应手势控制。-->
        <attr name="contentViewId" format="reference" />
        <!--状态改变动画差值器-->
        <attr name="android:interpolator" />
    </declare-styleable>

    <declare-styleable name="MaxSizeView">
        <attr name="android:maxHeight"/>
        <attr name="android:maxWidth"/>
    </declare-styleable>
</resources>